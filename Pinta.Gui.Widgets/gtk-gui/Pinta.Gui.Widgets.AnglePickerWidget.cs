// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Pinta.Gui.Widgets {
    
    
    public partial class AnglePickerWidget {
        
        private Gtk.VBox vbox;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Label label;
        
        private Gtk.HSeparator hseparator;
        
        private Gtk.HBox hbox2;
        
        private Pinta.Gui.Widgets.AnglePickerGraphic anglepickergraphic1;
        
        private Gtk.Alignment alignment1;
        
        private Gtk.SpinButton spin;
        
        private Gtk.Alignment alignment2;
        
        private Gtk.Button button;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget Pinta.Gui.Widgets.AnglePickerWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "Pinta.Gui.Widgets.AnglePickerWidget";
            // Container child Pinta.Gui.Widgets.AnglePickerWidget.Gtk.Container+ContainerChild
            this.vbox = new Gtk.VBox();
            this.vbox.Name = "vbox";
            this.vbox.Spacing = 6;
            // Container child vbox.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.label = new Gtk.Label();
            this.label.Name = "label";
            this.label.LabelProp = Mono.Unix.Catalog.GetString("label1");
            this.hbox1.Add(this.label);
            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.hbox1[this.label]));
            w1.Position = 0;
            w1.Expand = false;
            w1.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.hseparator = new Gtk.HSeparator();
            this.hseparator.Name = "hseparator";
            this.hbox1.Add(this.hseparator);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox1[this.hseparator]));
            w2.Position = 1;
            this.vbox.Add(this.hbox1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox[this.hbox1]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.anglepickergraphic1 = new Pinta.Gui.Widgets.AnglePickerGraphic();
            this.anglepickergraphic1.Name = "anglepickergraphic1";
            this.anglepickergraphic1.Value = 0;
            this.anglepickergraphic1.ValueDouble = 0;
            this.hbox2.Add(this.anglepickergraphic1);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox2[this.anglepickergraphic1]));
            w4.Position = 0;
            w4.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.alignment1 = new Gtk.Alignment(0.5F, 0F, 1F, 0F);
            this.alignment1.Name = "alignment1";
            // Container child alignment1.Gtk.Container+ContainerChild
            this.spin = new Gtk.SpinButton(0, 360, 1);
            this.spin.CanFocus = true;
            this.spin.Name = "spin";
            this.spin.Adjustment.PageIncrement = 10;
            this.spin.ClimbRate = 1;
            this.spin.Numeric = true;
            this.alignment1.Add(this.spin);
            this.hbox2.Add(this.alignment1);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox2[this.alignment1]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.alignment2 = new Gtk.Alignment(0.5F, 0F, 1F, 0F);
            this.alignment2.Name = "alignment2";
            // Container child alignment2.Gtk.Container+ContainerChild
            this.button = new Gtk.Button();
            this.button.WidthRequest = 28;
            this.button.HeightRequest = 24;
            this.button.CanFocus = true;
            this.button.Name = "button";
            this.button.UseUnderline = true;
            // Container child button.Gtk.Container+ContainerChild
            Gtk.Alignment w7 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w8 = new Gtk.HBox();
            w8.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w9 = new Gtk.Image();
            w9.Pixbuf = Stetic.IconLoader.LoadIcon(this, "gtk-go-back", Gtk.IconSize.Menu, 16);
            w8.Add(w9);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w11 = new Gtk.Label();
            w8.Add(w11);
            w7.Add(w8);
            this.button.Add(w7);
            this.alignment2.Add(this.button);
            this.hbox2.Add(this.alignment2);
            Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(this.hbox2[this.alignment2]));
            w16.Position = 2;
            w16.Expand = false;
            w16.Fill = false;
            this.vbox.Add(this.hbox2);
            Gtk.Box.BoxChild w17 = ((Gtk.Box.BoxChild)(this.vbox[this.hbox2]));
            w17.Position = 1;
            w17.Expand = false;
            w17.Fill = false;
            this.Add(this.vbox);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
        }
    }
}
